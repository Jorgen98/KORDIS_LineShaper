version: '3.9'
services:
  # /lineShaperDemo
  nginx:
    container_name: lineShaper-proxyServer
    image: nginx:1.19
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./index.html:/home/index.html
    networks:
      app-network:
        ipv4_address: 172.25.182.2
  # /lineShaperDemo/mapEditor
  editor:
    container_name: lineShaper-mapEditor
    build:
      context: ./editor/
      dockerfile: Dockerfile
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    networks:
      app-network:
        ipv4_address: 172.25.182.3
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  # /lineShaperDemo/lineRouter
  router:
    container_name: lineShaper-lineRouter
    build:
      context: ./router/
      dockerfile: Dockerfile
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    networks:
      app-network:
        ipv4_address: 172.25.182.4
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  api:
    container_name: lineShaper-api
    build:
      context: ./api/
      dockerfile: Dockerfile
    expose:
      - ${API_PORT}
    depends_on:
      postgis:
        condition: service_healthy
    environment:
      TZ: "Europe/Bratislava"
    networks:
      app-network:
        ipv4_address: 172.25.182.5
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
  postgis:
    container_name: lineShaper-db
    image: postgis/postgis
    volumes:
      - ./api/:/docker-entrypoint-initdb.d/
      - ./postgres-data:/var/lib/postgresql/data
    networks:
      app-network:
        ipv4_address: 172.25.182.6
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PGPORT: ${DB_PORT}
      TZ: "Europe/Bratislava"
    deploy:
      restart_policy:
        condition: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    healthcheck:
      test: ["CMD", "pg_isready", "--username=${DB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
networks:
  app-network:
    ipam:
      driver: default
      config:
        - subnet: 172.25.182.1/24
